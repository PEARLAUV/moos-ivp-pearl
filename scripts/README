#########################################################################
Directory for Arduino sketches to be used on front seat (currently an 
Arduino MEGA) for the PEARL platform.
#########################################################################

The current front seat architecture utilizes an NXP 9-dof IMU board and
the Madgwick filter for sensor fusion. Therefore the NXP_FXOS_FXAS.h 
header file and the Adafruit_Madgwick filter are uncommented in the 
relevant sketches below.

The following Arduino libraries are required (some of these libraries 
have other library dependencies that will be installed at the same time):
Adafruit Sensor Calibration
Adafruit AHRS
Adafruit Sensor Lab
ArduinoBlue
IBusBM

#========================================================================
# sensor_write_calibration
#========================================================================
Script for writing calibrations to the Arduino, which are stored in 
permanent memory on the board. Inputs within the scripts are:
-Hard iron offsets (uTesla)
-Soft iron offsets (uTesla) (don't need to change these)
-Gyro zero-rate offsets (rad/s)
-Accelerometer zero-rate offsets (m/s^2)

You can use the sketch at Examples->Adafruit Sensor Calibration->sensor_calibration_read
to view the current calibrations stored on the board.

#========================================================================
# calibrated_orientation
#========================================================================
Use this script to plot or print to the serial monitor the following:
-X,Y,Z acceleration in m/s^2
-X,Y,Z gyroscopic rates in deg/s or rad/s
-X,Y,Z magnetometer readings in uTesla
-Yaw, pitch, and roll readings from the sensor fusion filter

This script is useful for determining the accelerometer and gyroscope
offsets necessary for calibration, and for troubleshooting/viewing the 
outputs of the sensor fusion filter. The code contains instructions for
which block to uncomment for each output.

#========================================================================
# PEARL_Arduino_LED_test
#========================================================================
Script for testing/troubleshooting Arduino-Raspberry Pi comms. Posts
NMEA-format sentence with Euler angles to serial port and reads NMEA-
format sentence with thrust percentage commands from serial port. Turns
on LED (pin 8) if left thrust is > 20%. Turns on LED (pin 9) if right
thrust > 20%.

NMEA sentence from Arduino:
$PLIMU,<manual control flag>,<yaw>,<pitch>,<roll>*
NMEA sentence from RPi:
$PICOM,<desired left motor thrust percentage>,<desired right motor thrust percentage>*

#========================================================================
# PEARL_frontseat_bluetooth
#========================================================================
Script to be used on PEARL platform during operation, with bluetooth 
manual control only implemented. Also setup to write commands to LEDs for 
testing, so double-check that the TEST_MODE variable at the top of the
sketch is false before running on PEARL.


NMEA sentence from Arduino:
$PLIMU,<manual control flag>,<yaw>,<pitch>,<roll>*
$PLRAW,<Acc X>,<Acc Y>,<Acc Z>,<Gyro X>,<Gyro Y>,<Gyro Z>,<Mag X>,<Mag Y>,<Mag Z>*
$PLMOT,<last commanded left thrust percentage>,<last commanded right thrust percentage>*
NMEA sentence from RPi:
$PICOM,<desired left motor thrust percentage>,<desired right motor thrust percentage>*

#========================================================================
# PEARL_frontseat
#========================================================================
Script to be used on PEARL platform during operation, with both RC and 
bluetooth manual control implemented. Also setup to write commands to 
LEDs for testing, so double-check that the TEST_MODE variable at the top 
of the sketch is false before running on PEARL.


NMEA sentences from Arduino:
$PLIMU,<manual control flag>,<yaw>,<pitch>,<roll>*
$PLRAW,<Acc X>,<Acc Y>,<Acc Z>,<Gyro X>,<Gyro Y>,<Gyro Z>,<Mag X>,<Mag Y>,<Mag Z>*
$PLMOT,<last commanded left thrust percentage>,<last commanded right thrust percentage>*
NMEA sentence from RPi:
$PICOM,<desired left motor thrust percentage>,<desired right motor thrust percentage>*

#########################################################################
Calibration Instructions
#########################################################################

The sensor_calibration_write sketch contains commented-out blocks with 
the calibrations used for previous boards/IMUs for comparison. 

1. Accelerometer
   Use the calibrated_orientation sketch and uncomment the accelerometer
   blocks to view the raw acceleration readings. Enter the zero-rate
   offsets in the sensor_calibration_write sketch. When not moving
   the X and Y values should be ~0 and the Z value should be ~9.8.
   
   Accelerometer offsets for my NXP board:
   X: 0.05
   Y: -0.52
   Z: 0.25

2. Gyroscope
   Use the calibrated_orientation sketch and uncomment the gyroscope
   block to view the raw gyroscope readings (make sure to use the rad/s
   block). Enter the zero-rate offsets in the sensor_calibration_write
   sketch. When not moving the values from all three axes should be ~0. 
   ***Note that the sketch multiplies the gyroscopic rates by
   100 to make them viewable on the serial plotter within the Arduino
   IDE, so divide the offsets by 100 before using them***. 
 
   Gyro offsets for my NXP board:
   X: 0.01
   Y: 0.0074
   Z: 0.0189

3. Magnetometer
   The IMU is fixed relative to its surroundings on PEARL, so it is only
   necessary to calibrate the magnetometer using hard-iron offsets. Also, 
   because PEARL is relatively stable in the pitch and roll axes, only
   the X and Y axes need to be calibrated. 
   
   -Run the sketch in Examples->Adafruit Sensor Lab->calibration->mag_hardiron_simplecal.
   -Open the serial monitor.
   -Rotate the board around the Z axis until the Field: X and Y values settle close to 
    each other (with my board they settled around 20 uTesla). 
   -The Hard offset: X, Y, and Z values are the hard iron offsets that get input
    to the sensor_write_calibration sketch.
    
   Hard iron offsets for my NXP board:
   X: 1.05
   Y: -20.2
   Z: -98.2
